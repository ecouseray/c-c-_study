文件的操作，重点在于一些函数的使用。


磁盘        内存
文件        文件信息区(堆区)

FILE 类型 是一个自定义类型， 本质是一个结构体，其中存放了文件的相关信息

FILE* 叫做文件指针


// 打开文件
fopne("相对路径下文件的名称 或者 文件的绝对路径", "文件的打开方式")

r 的形式打开文件 必须是要文件存在
w 的形式打开文件 如果文件不存在，会创建一个新的文件
a 的形式打开文件 如果文件不存在，会创建一个新的文件

rb 报错
wb 新建
ab 报错


// 读写文件

fgetc()    从文件中读取一个字符            参数：字符，文件指针  错误返回EOF
fputc()    向文件中写一个字符     
fgets()    从文件中向一个变量读取一行数据   参数：变量，读取的字节个数(有效个数是这个数字-1)，文件指针  错误返回NULL
fputs()    向一个文件中写一行数据          参数：字符串，文件指针 

fscanf()   标准化的文件流输入              参数：读到那个文件里面，是什么样的格式写 
fprint()   标准化的文件流输出              参数：写到.....

fread()     只针对文件 从文件中像一个变量读取二进制数据， 
参数：数据的去向地址，一个这种数据的大小，要写这种数据的数量，文件流指针
fwrite()    只针对文件 向文件中写入二进制数据 
参数：数据来源地址，一个这种数据的大小，要写这种数据的数量，文件流指针




// 关闭文件
fclose(文件流指针)


// 任何一个C程序，只要运行起来，就会默认打开3个流
// stdin    - 标准输入流（键盘）
// stdout   - 标准输出流（屏幕）
// stderr   - 标准错误流（屏幕）
// 类型都是 FILE*
// 流 其实对应的 就是 输入输出缓冲区 这个地方的缓冲区


读取随机位置
fseek（文件流，偏移位置，SEEK_SET）初始位置   SEEK_CUR当前位置 、SEEK_END结束位置   读取一个字符

ftell (文件流)  输出当前文件指针相对起始位置的偏移量

rewind（文件流） 让文件指针回到起始位置



sscanf(str, "%%%", xxx)

sprintf(str, "%%%", xxx)